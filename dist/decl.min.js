function decl(a){if(!a){a={}}else{if(a.call){a.prototype=decl.proto;a.prototype[decl.dataKey]={}}}return decl.getCtor(a)}decl.dataKey="decl-data";decl.proto={extend:function(a){return(this[decl.dataKey].parent=a).prototype},augment:function(a){return(this[decl.dataKey].partial=a).prototype},};decl.clone=function(a){return this instanceof decl.clone?this:new decl.clone(decl.clone.prototype=a)};decl.merge=function(b,c){for(var a in c){if(c.hasOwnProperty(a)&&a!="prototype"&&a!=decl.dataKey){b[a]=c[a]}}};decl.empty=function(){return function(){}};decl.wrap=function(a){return function(){a.apply(this,arguments)}};decl.getCtor=function(b){var h,a="prototype",g="constructor",e=b.call?b:null,k=e?new e(e):b,d=k[decl.dataKey]||{},j=d.parent,f=d.partial,i=k.hasOwnProperty(g)?k[g]:f?f:j?decl.wrap(j):decl.empty();if(j){h=i[a];i[a]=decl.clone(j[a]);decl.merge(i[a],h)}decl.merge(i,e);decl.merge(i[a],k);return(i[a][g]=i)};